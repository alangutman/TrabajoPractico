package com.RedSocial.core.service;

import java.util.List;
import java.util.Objects;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.RedSocial.core.converter.PublicacionConverter;
import com.RedSocial.core.entity.Foto;
import com.RedSocial.core.entity.Publicacion;
import com.RedSocial.core.model.FotoModel;
import com.RedSocial.core.repository.PublicacionRepository;

@Service("PublicacionService")
public class PublicacionService {
	
	@Autowired
	@Qualifier("PublicacionRepository")
	private PublicacionRepository publicacionRepository;
	
	@Autowired
	@Qualifier("PublicacionConverter")
	private PublicacionConverter publicacionConverter;
	
	public boolean crear(Publicacion publicacion) {
		try {
			publicacionRepository.save(publicacion);
			return true;
		}catch(Exception e) {
			return false;
		}
	}
		
	public boolean actualizar(Publicacion publicacion) {
		try {
			if (publicacion.getIdPublicacion() == 0 || Objects.isNull(publicacion.getIdPublicacion()))
				return false; 
			
			publicacionRepository.save(publicacion);
			return true;
		}catch(Exception e) {
			return false;
		}
	}
	
	public boolean borrar(long idFoto) {
		try {
			Foto foto = fotoRepository.findByIdFoto(idFoto);
			fotoRepository.delete(foto);
			return true;
		}catch(Exception e) {
			return false;
		}
	}
	
	public List<FotoModel> obtener(){
		return fotoConverter.convertir(fotoRepository.findAll());
	}

	public FotoModel obtenerPorNombre(String nombre){
		return new FotoModel(fotoRepository.findByNombre(nombre));
	}
}
